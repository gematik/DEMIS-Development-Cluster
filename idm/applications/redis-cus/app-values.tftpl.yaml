fullname: "redis-cus"
fullnameOverride: "redis-cus"
nameOverride: "redis-cus"

istio:
  enable: ${istio_enable}

required:
  image: 
    repository: ${repository}
    %{ if strcontains(repository, "gematik1") }
    name: demis-redis
    %{ endif }

# Image Pull Secrets
imagePullSecrets: 
  %{~ for pull_secret in image_pull_secrets ~}
  - name: ${pull_secret}
  %{~ endfor ~}

podAnnotattions:
  checksum/secret-redis-cus-acl: ${redis_cus_acl_checksum}
  checksum/secret-redis-cus-reader-credentials: ${redis_cus_reader_credentials_checksum}
  checksum/secret-redis-cus-writer-credentials: ${redis_cus_writer_credentials_checksum}
  
# Define custom configuration values
# The Entries will be read from the given (external) Secrets and injected in the container with the same name.
# IMPORTANT: these values must be defined in the Secret Objects
config:
  settings:
    loglevel: notice
    maxmemory: 100mb
  # Enables the authentication of users with a given ACL
  auth:
    useDefault: false
    secret:
      name: redis-cus-acl
      key: users.acl
  # Defines if Redis data must be persisted on disk
  persistence:
    # The Persistence Volume Claim where the files are available
    volumeClaim:
      # Use default Persistence Volume Claim from this Chart
      useDefault: false
      # The (external) Persistence Volume Claim to be used
      name: redis-cus-volume-claim

%{~ if replica_count != null ~}
# Number of Pod Replicas desired
replicaCount: ${replica_count}
%{endif}

%{~ if resource_block != null ~}
# Override Resource Definitions for Pod
${resource_block}
%{endif}
